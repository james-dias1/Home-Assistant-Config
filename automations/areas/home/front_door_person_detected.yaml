---
alias: Front Door Person Detected
id: front_door_person_detected
mode: single
trigger:
  - platform: state
    entity_id: binary_sensor.front_door_person_motion
variables:
  old_state: '{{ trigger.from_state.state|lower }}'
  new_state: '{{ trigger.to_state.state|lower }}'
  last_opened: '{{ as_timestamp(states.binary_sensor.front_door.last_changed) }}'
  time_now: '{{ as_timestamp(now()) }}'
  seconds_difference: '{{ time_now - last_opened }}'
  door_just_opened: '{{ seconds_difference|round < 120 }}'
  auto_lock_enabled: '{{ is_state("input_boolean.leave_unlocked","off") }}'
  outdoor_illuminance: '{{ states("sensor.outdoor_illuminance") }}'
condition:
  - '{{ old_state != new_state }}'
  - '{{ door_just_opened == false }}'
  - '{{ auto_lock_enabled == true }}'
action:
  # - service: script.debug
  #   data:
  #     message: 'new_state: {{ new_state }}'

  # Send a notification when a person is detected.
  - choose:
      - conditions:
          - '{{ new_state == "on" }}'
        sequence:
          - service: script.notify_mobile
            data:
              title: Front Door
              message: Person Detected
              camera: camera.doorbell
              who: brian
              tag: 'person_detected'

          - choose:
              - conditions:
                  - '{{ is_state("media_player.tv_family_room","on") }}'
                sequence:
                  - service: camera.play_stream
                    target:
                      entity_id: camera.doorbell
                    data:
                      media_player: media_player.apple_tv_family_room

  # Skip turning on the entry lights in the middle of the day.
  - choose:
      - conditions: "{{ outdoor_illuminance|int < 2000 }}"
        sequence:
          - choose:
              - conditions:
                  - '{{ new_state == "on" }}'
                sequence:
                  # Store the current state of the porch light.
                  - service: scene.create
                    data:
                      scene_id: front_door_presence_snapshot
                      snapshot_entities:
                        - light.home_entry
                        - light.porch

                  # Disable Adaptive Lighting automated control.
                  # ** Porch
                  # - service: adaptive_lighting.set_manual_control
                  #   data:
                  #     entity_id: switch.adaptive_lighting_porch
                  #     manual_control: true
                  # # ** Entry/Stair Chandelier
                  # - service: adaptive_lighting.set_manual_control
                  #   data:
                  #     entity_id: switch.adaptive_lighting_home_entry
                  #     manual_control: true

                  # Full brightness!
                  - service: light.turn_on
                    data:
                      entity_id: light.porch
                      kelvin: 3500
                      brightness: 255
                  - service: light.turn_on
                    data:
                      entity_id: light.home_entry
                      brightness: 255

              - conditions:
                  - '{{ new_state == "off" }}'
                sequence:
                  # Restore the previous state of the porch light.
                  - service: scene.turn_on
                    data:
                      entity_id: scene.front_door_presence_snapshot
                      transition: 5

                  - delay:
                      seconds: 10

                  # Restore Adaptive Lighting automated control.
                  # ** Porch
                  - service: adaptive_lighting.set_manual_control
                    data:
                      manual_control: false
                      entity_id: switch.adaptive_lighting_porch
                  # ** Entry/Stair Chandelier
                  - service: adaptive_lighting.set_manual_control
                    data:
                      manual_control: false
                      entity_id: switch.adaptive_lighting_home_entry

  # Cool down timer. When "mode: single" this stops this automation from running more often than this.
  - delay:
      minutes: 5
