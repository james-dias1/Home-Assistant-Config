---
alias: Front door person detected
id: front_door_person_detected
mode: single
trigger:
  # Frigate
  - platform: state
    entity_id:
      - binary_sensor.doorbell_person_motion
      - binary_sensor.front_walkway_person_motion
    from: "off"
    to: "on"
variables:
  new_state: '{{ trigger.to_state.state|lower }}'
  last_opened: '{{ as_timestamp(states.binary_sensor.front_door.last_changed) }}'
  time_now: '{{ as_timestamp(now()) }}'
  seconds_difference: '{{ time_now - last_opened }}'
  door_recently_opened: '{{ seconds_difference|round < 120 }}'
  outdoor_illuminance: '{{ states("sensor.outdoor_illuminance_educated_guessor") }}'
condition:
  - '{{ door_recently_opened == false }}'
action:
  # - service: script.debug
  #   data:
  #     message: 'new_state: {{ new_state }}'

  # Skip turning on the entry lights in the middle of the day.
  - choose:
      - conditions: "{{ outdoor_illuminance|int(default=0) < 2000 }}"
        sequence:
          - choose:
              - conditions:
                  - '{{ new_state == "on" }}'
                sequence:
                  # Store the current state of the porch light.
                  - service: scene.create
                    data:
                      scene_id: front_door_presence_snapshot
                      snapshot_entities:
                        - light.home_entry
                        - light.porch

                  # Disable Adaptive Lighting automated control.
                  # ** Porch
                  # - service: adaptive_lighting.set_manual_control
                  #   target:
                  #     entity_id: switch.adaptive_lighting_porch
                  #   data:
                  #     manual_control: true
                  # # ** Entry/Stair Chandelier
                  # - service: adaptive_lighting.set_manual_control
                  #   target:
                  #     entity_id: switch.adaptive_lighting_home_entry
                  #   data:
                  #     manual_control: true

                  # Full brightness!
                  - service: light.turn_on
                    data:
                      entity_id: light.porch
                      kelvin: 3500
                      brightness: 255
                  - service: light.turn_on
                    data:
                      entity_id: light.home_entry
                      brightness: 255

              # - conditions:
              #     - '{{ new_state == "off" }}'
              #   sequence:
              #     # Restore the previous state of the porch light.
              #     - service: scene.turn_on
              #       target:
              #         entity_id: scene.front_door_presence_snapshot
              #       data:
              #         transition: 5

              #     - delay:
              #         seconds: 10

              #     # Restore Adaptive Lighting automated control.
              #     # ** Porch
              #     - service: adaptive_lighting.set_manual_control
              #       target:
              #         entity_id: switch.adaptive_lighting_porch
              #       data:
              #         manual_control: false
              #     # ** Entry/Stair Chandelier
              #     - service: adaptive_lighting.set_manual_control
              #       target:
              #         entity_id: switch.adaptive_lighting_home_entry
              #       data:
              #         manual_control: false

  # Send a notification when a person is detected.
  - choose:
      - conditions:
          - '{{ new_state == "on" }}'
        sequence:
          - delay:
              seconds: 4

          - service: script.notify_mobile
            data:
              title: Front Door
              message: Person Detected
              camera: camera.front_door
              who: brian
              tag: 'person_detected'
              url: /lovelace/outdoors

          - service: script.notify_pc
            data:
              title: Front Door
              message: Person Detected
              camera: camera.front_door
              pc: blackpc

          # - alias: Stream the camera feed to Apple TV.
          #   choose:
          #     conditions:
          #       - condition: state
          #         entity_id: media_player.tv_family_room
          #         state: "on"
          #     sequence:
          #       - service: remote.turn_on
          #         entity_id: remote.apple_tv_family_room
          #       - service: camera.play_stream
          #         target:
          #           entity_id: camera.doorbell
          #         data:
          #           media_player: media_player.apple_tv_family_room

  # Cool down timer. When "mode: single" this stops this automation from running more often than this.
  - delay:
      minutes: 5
