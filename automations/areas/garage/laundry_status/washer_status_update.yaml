---
alias: washer_status_update

mode: single
trigger:
  # Update washer state when dryer starts drying.
  - platform: state
    entity_id: input_select.dryer_status
    to: "Drying"

  # Make decisions based on the Washer power usage.
  - platform: state
    entity_id: sensor.sonoff_s31_02_power

  # LG ThinQ reported the washer just powered on.
  - platform: state
    entity_id: binary_sensor.washer
    from: "off"
    to: "on"

  # LG ThinQ reported the wash is complete.
  - platform: state
    entity_id: binary_sensor.washer_wash_completed
    from: "off"
    to: "on"

  # LG ThinQ reported an error occurred.
  - platform: state
    entity_id: binary_sensor.washer_error_state
    from: "off"
    to: "on"
variables:
  power: '{{ states("sensor.sonoff_s31_02_power")|int }}'
  previous_status: '{{ states("input_select.washer_status") }}'
  trigger_id: '{{ trigger.to_state.entity_id }}'
  # Off, Standby, Washing, Clean, Error
  status: |
    {% if trigger_id == "binary_sensor.washer" %}
      Standby
    {%- elif trigger_id == "binary_sensor.washer_wash_completed" %}
      Clean
    {%- elif trigger_id == "input_select.dryer_status" %}
      Off
    {%- elif trigger_id == "sensor.sonoff_s31_02_power" %}
      {%- if power > 20 %}
        Washing
      {%- elif previous_status == "Washing" %}
        Clean
      {%- elif power > 3 and previous_status == "Off" %}
        Standby
      {%- elif power < 3 and previous_status != "Clean" %}
        Off
      {%- endif %}
    {%- elif trigger_id == "binary_sensor.washer_error_state" %}
      Error
    {%- else %}
      Off
    {%- endif %}
  notify_title: '{{ status ~ ": Washing Machine" if status in ["Clean","Error"] }}'
  notify_message: |
    {% if status == "Error" %}
      Error. The washing machine has an error. {{ state_attr('sensor.washer','error_message') }}
    {% endif %}
condition:
  - condition: template
    value_template: '{{ status != previous_status
                      and status != "Unknown" }}'
action:
  - service: input_select.select_option
    data:
      entity_id: input_select.washer_status
      option: '{{ status }}'

  - choose:
      - conditions:
          - '{{ status == "Error" }}'
        sequence:
          - service: script.notify_speech
            data:
              media_player: group.google_downstairs
              message: '{{ notify_message }}'

          - service: script.notify_ios
            data:
              title: '{{ notify_title }}'
              message: '{{ notify_message }}'
              who: brian
