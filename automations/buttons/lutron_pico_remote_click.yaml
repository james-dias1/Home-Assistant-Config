---
alias: lutron_pico_remote_click
initial_state: true
mode: parallel

trigger:
  platform: event
  event_type: lutron_caseta_button_event
variables:
  debug_output: False

  remote: '{{ trigger.event.data.device_name|lower|replace(" ","_") }}'
  button: '{{ trigger.event.data.button_number }}'
  action: '{{ trigger.event.data.action }}'

  commands:
    2: "on"
    3: "middle"
    4: "off"
    5: "step_up"
    6: "step_down"
  command: '{{ commands[button]|default("") }}'

  devices:
    dining_room:
      "on": "light.dining_room"
      "off": "light.dining_room"
      middle: "group.kitchen_lights"
      step_up: "light.dining_room"
      step_down: "light.dining_room"
    entry:
      "on": "light.home_entry"
      "off": "light.home_entry"
      middle: ""
      step_up: "light.home_entry"
      step_down: "light.home_entry"

    play_room_1:
      "on": "light.play_room"
      "off": "group.play_room_lights"
      middle: "light.play_room_floor_lamp"
      step_up: "group.play_room_lights"
      step_down: "group.play_room_lights"

    play_room_2:
      "on": "light.play_room"
      "off": "group.garage_entry_lights"
      middle: "light.play_room_entry"
      step_up: "group.play_room_lights"
      step_down: "group.play_room_lights"

  device: '{{ devices[remote][command]|default("") }}'

condition:
  - condition: template
    value_template: '{{ action != "release" }}'

action:
  - choose:
      - conditions: '{{ debug_output == True }}'
        sequence:
          - service: script.debug
            data:
              title: '"{{ remote }}" click'
              message: |
                remote: {{ remote }}
                button: {{ button }}
                action: {{ action }}

                device: {{ device }}
                command: {{ command }}
              id: '{{ remote ~"_"~ as_timestamp(now()) }}'

  - choose:
      - conditions: '{{ command in ["on","off"] and device != "" }}'
        sequence:
          - service: 'homeassistant.turn_{{ command }}'
            data:
              entity_id: '{{ device }}'

      - conditions: '{{ command == "middle" and device != "" }}'
        sequence:
          - variables:
              command: '{{ "off" if is_state(device,"on") else "on" }}'

          - service: 'homeassistant.turn_{{ command }}'
            data:
              entity_id: '{{ device }}'

      - conditions: '{{ command in ["step_up","step_down"] and device != "" }}'
        sequence:
          - service: homeassistant.turn_on
            data:
              entity_id: '{{ device }}'
              brightness_step_pct: '{{ "-" if command == "step_down" }}20'
