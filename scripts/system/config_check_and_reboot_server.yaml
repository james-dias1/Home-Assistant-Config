---
sequence:
  - delay:
      seconds: 1
    
  - service: script.toast
    data:
      message: ‚úîÔ∏è config is running!
      duration: 5000

  # Run the config_check
  - service: config_check.run

  # Wait for the notification to appear
  - wait_template: "{{ states('persistent_notification.1337') is string }}"
    timeout: 00:03:00

  - choose:
    - conditions:
        # Restart only if the configuration is OK
        - condition: template
          value_template: "{{ is_state_attr('persistent_notification.1337','message','Configuration is OK!') }}"
      sequence:
        # Clear any old config check notifications
        - service: persistent_notification.dismiss
          data:
            notification_id: "1337"

        - service: script.toast
          data:
            message: "‚úîÔ∏è = üëç"

        # - delay:
        #     seconds: 2

        #- service: script.reboot_server
        - service: script.toast
          data:
            message: Rebooting the server!

        - service: hassio.host_reboot
    
    default:
      # Display the message as a toast notification
      - service: script.toast
        data_template:
          message: "{{ state_attr('persistent_notification.1337','message') }}"
          duration: 0
