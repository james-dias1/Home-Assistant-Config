---
variables:
  notification_service: |
    {%- if who.startswith("notify.") %}
      {{ who }}
    {%- else %}
      notify.{{ who|default("brian") }}
    {% endif %}

  title: '{{ title|default }}'
  subtitle: '{{ subtitle|default }}'
  group: |
    {%- if group is string %}
      {{ group }}
    {%- elif camera is string %}
      camera
    {%- elif image is string %}
      image
    {%- else %}
      {{ default }}
    {% endif %}
  tag: |
    {%- if tag is string %}
      {{ tag }}
    {%- elif camera is string %}
      camera
    {%- elif image is string %}
      image
    {%- else %}
      {{ default }}
    {% endif %}
  critical: '{{ critical|default(false) }}'

  url: |
    {% if url is string %}
      {%- if url.startswith("/") %}
        homeassistant://navigate{{ url }}
      {%- else %}
        {{ url }}
      {% endif %}
    {%- elif camera is string %}
      homeassistant://navigate/lovelace/cameras
    {%- else %}
      {{ default }}
    {% endif %}
  sound_file: |
    {%- if sound is string %}
      {{ sound }}
    {%- else %}
      {%- if category != "" %}
        {% if category == "doorbell" %}
          media-source://media_source/local/audio/jetsons-doorbell.mp3
        {% else %}
          Update.caf
        {% endif %}
      {% else %}
        default
      {% endif %}
    {%- endif %}
sequence:
  # Only continue it mobile notifications are enabled.
  - condition: state
    entity_id: input_boolean.mobile_notifications
    state: 'on'

  - choose:
      - conditions:
          - '{{ camera is string }}'
        sequence:
          - service: '{{ notification_service }}'
            data:
              title: '{{ title }}'
              message: '{{ message }}'
              data:
                # Attach camera entity.
                attachment:
                  content-type: jpeg
                entity_id: '{{ camera }}'

                subtitle: '{{ subtitle }}'
                url: '{{ url }}'
                # Group like messages together.
                group: '{{ group }}'
                # Replace previous message when present.
                tag: '{{ tag }}'
                # Control what happens to alert when app is currently being viewed.
                presentation_options:
                  - alert
                  - badge
                  - sound

      # Critical alert!
      - conditions:
          - '{{ critical == true }}'
        sequence:
          - service: '{{ notification_service }}'
            data:
              title: '{{ title }}'
              message: '{{ message }}'
              data:
                # Critical alert!
                push:
                  sound:
                    name: '{{ sound }}'
                    critical: 1
                    volume: 1.0

                subtitle: '{{ subtitle }}'
                url: '{{ url }}'
                # Group like messages together.
                group: '{{ group }}'
                # Replace previous message when present.
                tag: '{{ tag }}'
                # Control what happens to alert when app is currently being viewed.
                presentation_options:
                  - alert
                  - badge
                  - sound

    default:
      - service: '{{ notification_service }}'
        data:
          title: '{{ title }}'
          message: '{{ message }}'
          data:
            subtitle: '{{ subtitle }}'
            url: '{{ url }}'
            push:
              sound: '{{ sound }}'
            # Group like messages together.
            group: '{{ group }}'
            # Replace previous message when present.
            tag: '{{ tag }}'
            # Control what happens to alert when app is currently being viewed.
            presentation_options:
              - alert
              - badge
              - sound
