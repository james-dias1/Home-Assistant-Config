---
# Calculation References:
#   https://nathanfiscus.github.io/inovelli-notification-calc/
#   https://community.inovelli.com/t/home-assistant-2nd-gen-switch-rgb-working/168/62
#   https://docs.google.com/spreadsheets/d/14wTP4OL4hkDK3Et5kYL4fyxPIK_R9JR3cgFxSa6dhyw/edit?usp=sharing
#
# Changes:
#   July 22, 2020: Incorporating changes from Kevin Schlichter.
#     https://github.com/kschlichter/Home-Assistant-Inovelli-Red-Dimmer-Switch
#
#   September 17, 2020: There are some massive improvements to my version of this code. Here are the highlights:
#     1. Choose - using the recently added choose: feature a separate call has been created for the Z-wave and OZW
#        versions of the service call.
#     2. Variables - using 0.115’s new variables: feature the variables sent each service call only have to be
#        calculated once.
#     3. Supported Features - I realized that I could probably tell the difference between modules using the
#        “supported_features” attribute of each switch. For example my dimmer’s supported features is “33”.
#
#   September 18, 2020: Added "model" parameter with options of dimmer, switch, combo_light, combo_fan. This replaces
#     supported_features as the combo fan/light switch also had the same supported_features value.
#
#   February 24, 2021: Added support for Z-Wave JS in place of OpenZwave (ozw).
#     The ozw code is remarked out for those that still need it.
#
#   February 27, 2021:
#     1. Added zwave_integration at top of "variables:" section to allow users to define which integration is
#        installed ("zwave", "ozw", "zwave_js"). I just don't see a simple way to auto-detect this.
#     2. Added a comment describing the "model" variable.
#     3. Replaced personal "script.debug" service call with universal "persistent_notification.create".
#        Unremarking these lines could help you troubleshoot why something isn't working as expected.
#     4. Updated broken spreadsheet link with public copy stored in my Google Docs account.
#        Thanks for the heads up Kevin Schlichter!
#
#   March 26, 2021
#     1. Added fields to help users experimenting in the Services Developer Tool.
#
#   April 3, 2021
#   Incorporated @firstof9's changes:
#     1. Set execution mode to "parallel" to all this script to potentially run on more than one devices simultaneously.
#     2. Implement ZWave JS's new zwave_js.bulk_set_partial_config_parameters command.
#   Source: https://gist.github.com/firstof9/b88d072a81c54b314fe7ddb901fc5c29
#
#   May 10, 2021
#   Incorporated @koconut's corrected "Off code".
#   Source: https://community.home-assistant.io/t/inovelli-z-wave-red-series-notification-led/165483/146
#
#   December 30, 2021
#     1. Added automatic zwave integration detection!
#     2. Added automatic model name extraction from the parent device.
#     3. Now the model type should be automatically discovered for Z-Wave JS and zwave (but not ozw).
#
#   January 22, 2022
#     1. Released this script as a Blueprint script!
#     2. Added Brightness "level" parameter to fields.
#     3. Little bit of code cleanup.
#   Blueprint script -> https://github.com/brianhanifin/Home-Assistant-Config/blob/master/blueprints/script/brianhanifin/inovelli_led_notify.yaml
#
#   May 26, 2022
#   Added support for the White LED color.
#     * @kschlichter and @mwav3 thank you for your help.
#     * Support for the color white was supposedly added to the LZW31-SN dimmer [in Firmware 1.45 accoding to Inovelli](https://support.inovelli.com/portal/en/kb/articles/firmware-change-log-lzw31-sn-dimmer-switch-red-series).
#     * I ended up having to flash both LZW31-SN Z-Wave 1.61 and LZW31-SN Holtek 1.45 firmware twice before I could see white light.
#
mode: parallel
variables:
  # Set to true to create a "persistent_notification" with debugging information.
  debug: false  # Preform the Inovelli math.
  - variables:
      level: "{{ level|default(4)|int }}"
      duration: '{{ durations[duration|default("Indefinitely")|title] }}'
      color: |
        {%- if color is not number %}
          {%- set color = color|default("Yellow")|title %}
        {%- else %}
          {%- set color = color|int %}
        {% endif %}
        {{ colors[color|title]|int }}

  # Loop through each entity_id
  - repeat:
      for_each: '{{ entity_list }}'
      sequence:
        - variables:
            # Automatically extract the model name.
            model_name: |
              {%- set model_name = device_attr(repeat.item, "model") %}
              {%- if "-" in model_name %}
                {{ model_name.split("-")[0] }}
              {%- else %}
                {{ model_name }}
              {%- endif %}

            # 1st. Use the automatically detected "model_name".
            # 2nd. Assume the model type is "dimmer".
            model_type: |
              {%- if model_name is string %}
                {%- if "LZW31" in model_name %}
                  dimmer
                {%- elif "LZW36" in model_name %}
                  combo_light
                {%- else %}
                  switch
                {%- endif %}
              {%- else %}
                dimmer
              {%- endif %}
            parameter: "{{ parameters[model_type|lower]|int }}"
            effect: |
              {% if model_type == "switch" %}
                {{- effects_switch[effect|default("Blink")|title] }}
              {%- else %}
                {{- effects_dimmer[effect|default("Blink")|title] }}
              {% endif %}
            inovelli_math: |
              {%- if effect|int > 0 %}
                {{ color|int + (level|int * 256) + (duration|int * 65536) + (effect|int * 16777216) }}
              {%- else %}
                0
              {% endif %}

        # Set debug = true above to provide output troubleshooting information.
        - choose:
            - conditions:
                - '{{ debug == true }}'
              sequence:
                - variables:
                    input_entity: "{{ repeat.item }}"
                    input_color: !input input_color
                    input_level: !input input_level
                    input_effect: !input input_effect
                    input_duration: !input input_duration
                - service: persistent_notification.create
                  data:
                    title: "DEBUG: script.inovelli_led"
                    message: |
                      input_entity: {{ input_entity }}
                      input_color: {{ input_color }}
                      input_level: {{ input_level }}
                      input_effect: {{ input_effect }}
                      input_duration: {{ input_duration }}

                      model_name: {{ model_name }}
                      model_type: {{ model_type }}
                      color: {{ color|title }}
                      level: {{ level }}
                      duration: {{ duration|title }}
                      effect: {{ effect|title }}'
                      parameter: {{ parameter }}
                      inovelli_math: {{ inovelli_math }}

        # Clear the previous effect.
        - service: zwave_js.bulk_set_partial_config_parameters
          target:
            entity_id: "{{ repeat.item }}"
          data:
            parameter: "{{ parameter }}"
            value: '16714410'

        # Start the new effect, unless we were just turning it off.
        - choose:
            - conditions: '{{ inovelli_math > 0 }}'
              sequence:
                - service: zwave_js.bulk_set_partial_config_parameters
                  target:
                    entity_id: "{{ repeat.item }}"
                  data:
                    parameter: "{{ parameter }}"
                    value: "{{ inovelli_math }}"

fields:
  entity_id:
    name: Entity
    description: Inovelli device to notify.
    example: light.family_room
    selector:
      entity:
        #integration: zwave_js
  color:
    name: Color
    description: Choose a color.
    default: Purple
    selector:
      select:
        options:
          - "Off"
          - Red
          - Orange
          - Yellow
          - Green
          - Cyan
          - Teal
          - Blue
          - Purple
          - Light Pink
          - Pink
          - White
  level:
    name: Brightness level
    description: Value from 0 (off) to 10 (100% brightness).
    default: 4
    selector:
      number:
        min: 0
        max: 10
  effect:
    name: Effect
    description: Choose an effect.
    default: Blink
    selector:
      select:
        options:
          - "Off"
          - Solid
          - Chase
          - Fast Blink
          - Slow Blink
          - Blink
          - Pulse
          - Breath
  duration:
    name: Duration
    description: How long should the effect run?
    default: 10 Seconds
    selector:
      select:
        options:
          - "Off"
          - 1 Second
          - 2 Seconds
          - 3 Seconds
          - 4 Seconds
          - 5 Seconds
          - 6 Seconds
          - 7 Seconds
          - 8 Seconds
          - 9 Seconds
          - 10 Seconds
          - 15 Seconds
          - 20 Seconds
          - 25 Seconds
          - 30 Seconds
          - 35 Seconds
          - 40 Seconds
          - 45 Seconds
          - 50 Seconds
          - 55 Seconds
          - 60 Seconds
          - 2 Minutes
          - 3 Minutes
          - 4 Minutes
          - 10 Minutes
          - 15 Minutes
          - 30 Minutes
          - 45 Minutes
          - 1 Hour
          - 2 Hours
          - Indefinitely
