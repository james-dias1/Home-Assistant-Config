---
mode: parallel
variables:
  media_player: '{{ media_player|default("media_player.google_kitchen") }}'
  briefing: !include ../../templates/speech/briefing.yaml
  mqtt_message_state: "{{ briefing|striptags }}"
  # mqtt_message_attributes:
  #   target: "{{ media_player }}"

sequence:
  - condition: state
    entity_id: input_boolean.audio_notifications
    state: "on"

  # - condition: time
  #   after: '06:00:00'
  #   before: '22:00:00'

  # Only update group.lights_on when say_light_check is requested.
  - choose:
      - conditions:
          - "{{ say_light_check == True }}"
        sequence:
          # Update the values that may be needed for the briefing.
          - service: script.turn_on
            entity_id: script.update_lights_on

  - choose:
      - conditions:
          - '{{ media_player.startswith("group") }}'
        sequence:
          - service: script.say_speaker_group
            data:
              media_player: "{{ media_player }}"
              message: "{{ message|striptags }}"

    default:
      - service: script.say_cloud
        data:
          media_player: "{{ media_player }}"
          message: "{{ briefing }}"

  - service: script.toast
    data:
      message: "{{ mqtt_message_state }}"

  # Store Last Message
  - service: script.store_mqtt_sensor
    data:
      name: "last_message"
      state: "{{ mqtt_message_state }}"
      #attributes: '{{ mqtt_message_attributes }}'

  # Store Last Speaker
  - service: script.store_mqtt_sensor
    data:
      name: "last_speaker"
      state: "{{ media_player }}"

fields:
  media_player:
    description: Media Player entity_id or group id.
    example: media_player.google_kitchen or group.google_welcome
    default: media_player.google_family_room
    selector:
      text:
  message:
    description: Include details here.
    example: The laundry is ready to be moved to the dryer.
    required: true
    selector:
      text:
        multiline: true
