---
script:
  wakeup_brian:
    variables:
      who: brian
      light: light.table_lamp
    sequence:
      # - service: script.debug
      #   data:
      #     message: |
      #       light: {{ light }}

      - service: scene.apply
        data:
          entities:
            fan.bedroom: off
            light.home_entry:
              state: on
              brightness: 40

      - service: script.wakeup_light_start
        data:
          light: '{{ light }}'
          who: '{{ who }}'

  wakeup_brian_timeout:
    sequence:
      - service: homeassistant.turn_off
        data:
          entity_id: light.table_lamp

input_boolean:
  wakeup_brian_status:
    name: Activate Alarm
    icon: mdi:alarm-check
  wakeup_brian_skipnext:
    name: Skip Next Alarm
    icon: mdi:alarm-check
  wakeup_brian_sun:
    name: Sunday
    icon: mdi:checkbox-marked-circle
  wakeup_brian_mon:
    name: Monday
    icon: mdi:checkbox-marked-circle
  wakeup_brian_tue:
    name: Tuesday
    icon: mdi:checkbox-marked-circle
  wakeup_brian_wed:
    name: Wednesday
    icon: mdi:checkbox-marked-circle
  wakeup_brian_thu:
    name: Thursday
    icon: mdi:checkbox-marked-circle
  wakeup_brian_fri:
    name: Friday
    icon: mdi:checkbox-marked-circle
  wakeup_brian_sat:
    name: Saturday
    icon: mdi:checkbox-marked-circle

input_datetime:
  wakeup_brian_time:
    name: Wakeup Time
    has_date: false
    has_time: true

sensor:
  - platform: template
    sensors:
      wakeup_brian_start:
        friendly_name: Light Fade-in Start
        icon_template: mdi:lightbulb-on-outline
        value_template: |
          {% set wakeup_time = states('input_datetime.wakeup_brian_time').split(':') %}
          {%- if (wakeup_time[1]|int >= 10) -%}
            {{ "%0.02d:%0.02d"|format(wakeup_time[0]|int, wakeup_time[1]|int -10) }}
          {%- else -%}
            {{ "%0.02d:%0.02d"|format(wakeup_time[0]|int -1, wakeup_time[1]|int +50) }}
          {%- endif -%}

timer:
  wakeup_timeout_brian:
    duration: "01:00:00"
