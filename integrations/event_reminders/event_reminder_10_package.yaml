---
automation:
  - alias: event_reminder_10
    trigger:
      platform: template
      value_template: >-
        {{ is_state('sensor.event_reminder_10_1',states('sensor.time'))
        or is_state('sensor.event_reminder_10_2',states('sensor.time')) }}
    condition:
      condition: and
      conditions:
        # Is today one of the selected days?
        - condition: template
          value_template: >
            {% set   day_name = now().strftime("%A")|lower -%}
            {%- if   day_name == 'monday'    and is_state('input_boolean.event_reminder_10_mon','on') -%}{{true}}
            {%- elif day_name == 'tuesday'   and is_state('input_boolean.event_reminder_10_tue','on') -%}{{true}}
            {%- elif day_name == 'wednesday' and is_state('input_boolean.event_reminder_10_wed','on') -%}{{true}}
            {%- elif day_name == 'thursday'  and is_state('input_boolean.event_reminder_10_thu','on') -%}{{true}}
            {%- elif day_name == 'friday'    and is_state('input_boolean.event_reminder_10_fri','on') -%}{{true}}
            {%- elif day_name == 'saturday'  and is_state('input_boolean.event_reminder_10_sat','on') -%}{{true}}
            {%- elif day_name == 'sunday'    and is_state('input_boolean.event_reminder_10_sun','on') -%}{{true}}
            {%- else -%}{{false}}{%- endif %}
    action:
      - service_template: >
          {% if is_state('input_boolean.event_reminder_10_skipnext', 'on') %}
            script.event_reminder_skipnext
          {% else %}
            script.event_reminder_announce
          {% endif %}
        data_template:
          media_player: "{{ states('input_select.event_reminder_10_echo') }}"
          skipnext: >
            {% if is_state('sensor.event_reminder_10_2',states('sensor.time')) %}
              input_boolean.event_reminder_10_skipnext
            {% endif %}
          message: >-
            {% if is_state('sensor.event_reminder_10_1',states('sensor.time')) %}
              {{ states('input_text.event_reminder_10_1') }}
            {% else %}
              {{ states('input_text.event_reminder_10_2') }}
            {% endif %}

input_boolean:
  event_reminder_10_skipnext:
    name: Skip Next Reminder
    icon: mdi:alarm-check
  event_reminder_10_mon:
    name: Monday
    icon: mdi:checkbox-marked-circle
  event_reminder_10_tue:
    name: Tuesday
    icon: mdi:checkbox-marked-circle
  event_reminder_10_wed:
    name: Wednesday
    icon: mdi:checkbox-marked-circle
  event_reminder_10_thu:
    name: Thursday
    icon: mdi:checkbox-marked-circle
  event_reminder_10_fri:
    name: Friday
    icon: mdi:checkbox-marked-circle
  event_reminder_10_sat:
    name: Saturday
    icon: mdi:checkbox-marked-circle
  event_reminder_10_sun:
    name: Sunday
    icon: mdi:checkbox-marked-circle


input_datetime:
  event_reminder_10_1:
    name: First Announcement
    has_date: false
    has_time: true
  event_reminder_10_2:
    name: Second Announcement
    has_date: false
    has_time: true

input_select:
  event_reminder_10_echo:
    name: Announce on which Echo(s)?
    options: !include ../../templates/speech/tts_rooms.yaml
    icon: mdi:amazon-alexa

input_text:
  event_reminder_10_1:
    name: First Announcement
  event_reminder_10_2:
    name: Second Announcement

sensor:
  - platform: template
    sensors:
      event_reminder_10_1:
        entity_id: input_datetime.event_reminder_10_1
        friendly_name: First Time
        icon_template: mdi:clock-outline
        value_template: >-
          {%  set reminder_time    = states("input_datetime.event_reminder_10_1") -%}
          {%- set reminder_hour    = reminder_time.split(':')[0] -%}
          {%- set reminder_minutes = reminder_time.split(':')[1] -%}
          {{ "%0.02d:%0.02d" | format(reminder_hour|int, reminder_minutes|int) }}
  - platform: template
    sensors:
      event_reminder_10_2:
        entity_id: input_datetime.event_reminder_10_2
        friendly_name: First Time
        icon_template: mdi:clock-outline
        value_template: >-
          {%  set reminder_time    = states("input_datetime.event_reminder_10_2") -%}
          {%- set reminder_hour    = reminder_time.split(':')[0] -%}
          {%- set reminder_minutes = reminder_time.split(':')[1] -%}
          {{ "%0.02d:%0.02d" | format(reminder_hour|int, reminder_minutes|int) }}
