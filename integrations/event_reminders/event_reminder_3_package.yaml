---
automation:
  - alias: event_reminder_3
    trigger:
      platform: template
      value_template: >-
        {{ is_state('sensor.event_reminder_3_1',states('sensor.time'))
        or is_state('sensor.event_reminder_3_2',states('sensor.time')) }}
    condition:
      condition: and
      conditions:
        # ... and today one of the selected days.
        - condition: template
          value_template: >
            {% set   day_name = now().strftime("%A")|lower -%}
            {%- if   day_name == 'monday'    and is_state('input_boolean.event_reminder_3_mon','on') -%}{{true}}
            {%- elif day_name == 'tuesday'   and is_state('input_boolean.event_reminder_3_tue','on') -%}{{true}}
            {%- elif day_name == 'wednesday' and is_state('input_boolean.event_reminder_3_wed','on') -%}{{true}}
            {%- elif day_name == 'thursday'  and is_state('input_boolean.event_reminder_3_thu','on') -%}{{true}}
            {%- elif day_name == 'friday'    and is_state('input_boolean.event_reminder_3_fri','on') -%}{{true}}
            {%- elif day_name == 'saturday'  and is_state('input_boolean.event_reminder_3_sat','on') -%}{{true}}
            {%- elif day_name == 'sunday'    and is_state('input_boolean.event_reminder_3_sun','on') -%}{{true}}
            {%- else -%}{{false}}{%- endif %}
    action:
      # - service: persistent_notification.create
      #   data_template:
      #     title: "DEBUG"
      #     message: "automation.event_reminder_3"

      - service_template: >
          {% if is_state('input_boolean.event_reminder_3_skipnext', 'on') %}
            script.event_reminder_skipnext
          {% else %}
            script.event_reminder_announce
          {% endif %}
        data_template:
          media_player: "{{ states('input_select.event_reminder_3_echo') }}"
          skipnext: >
            {% if is_state('sensor.event_reminder_3_2',states('sensor.time')) %}
              input_boolean.event_reminder_3_skipnext
            {% endif %}
          say_dark_outside: "{{ states('input_boolean.event_reminder_3_say_dark_outside') }}"
          say_door_window_check: "{{ states('input_boolean.event_reminder_3_say_door_window_check') }}"
          say_goodbye: "{{ states('input_boolean.event_reminder_3_say_goodbye') }}"
          say_goodnight: "{{ states('input_boolean.event_reminder_3_say_goodnight') }}"
          say_greeting: "{{ states('input_boolean.event_reminder_3_say_greeting') }}"
          say_inside_weather: "{{ states('input_boolean.event_reminder_3_say_inside_weather') }}"
          say_light_check: "{{ states('input_boolean.event_reminder_3_say_light_check') }}"
          say_outside_weather: "{{ states('input_boolean.event_reminder_3_say_outside_weather') }}"
          say_responsibilities: "{{ states('input_boolean.event_reminder_3_say_responsibilities') }}"

# script:
#   event_reminder_3_announce_test:    
#     sequence:
#       - service: script.event_reminder_announce
#         data_template:
#           media_player: "{{ states('input_select.event_reminder_3_echo') }}"
#           say_dark_outside: "{{ states('input_boolean.event_reminder_3_say_dark_outside') }}"
#           say_door_window_check: "{{ states('input_boolean.event_reminder_3_say_door_window_check') }}"
#           say_goodbye: "{{ states('input_boolean.event_reminder_3_say_goodbye') }}"
#           say_goodnight: "{{ states('input_boolean.event_reminder_3_say_goodnight') }}"
#           say_greeting: "{{ states('input_boolean.event_reminder_3_say_greeting') }}"
#           say_inside_weather: "{{ states('input_boolean.event_reminder_3_say_inside_weather') }}"
#           say_light_check: "{{ states('input_boolean.event_reminder_3_say_light_check') }}"
#           say_outside_weather: "{{ states('input_boolean.event_reminder_3_say_outside_weather') }}"
#           say_responsibilities: "{{ states('input_boolean.event_reminder_3_say_responsibilities') }}"

input_boolean:
  event_reminder_3_skipnext:
    name: Skip Next Reminder
    icon: mdi:alarm-check

  event_reminder_3_mon:
    name: Monday
  event_reminder_3_tue:
    name: Tuesday
  event_reminder_3_wed:
    name: Wednesday
  event_reminder_3_thu:
    name: Thursday
  event_reminder_3_fri:
    name: Friday
  event_reminder_3_sat:
    name: Saturday
  event_reminder_3_sun:
    name: Sunday

  event_reminder_3_say_dark_outside:
    name: Dark Outside
  event_reminder_3_say_door_window_check:
    name: Door+Windows
  event_reminder_3_say_goodbye:
    name: Goodbye
  event_reminder_3_say_goodnight:
    name: Goodnight
  event_reminder_3_say_greeting:
    name: Greeting
  event_reminder_3_say_inside_weather:
    name: Indoor Temp
  event_reminder_3_say_light_check:
    name: Light Check
  event_reminder_3_say_outside_weather:
    name: Outdoor Weather
  event_reminder_3_say_responsibilities:
    name: Responsibilities 

input_datetime:
  event_reminder_3_1:
    name: First Announcement
    has_date: false
    has_time: true
  event_reminder_3_2:
    name: Second Announcement
    has_date: false
    has_time: true

input_select:
  event_reminder_3_echo:
    name: Announce on which Echo(s)?
    options: !include /config/templates/speech/tts_rooms.yaml
    icon: mdi:amazon-alexa

# input_text:
#   event_reminder_3_1:
#     name: First Announcement
#   event_reminder_3_2:
#     name: Second Announcement

sensor:
  - platform: template
    sensors:
      event_reminder_3_1:
        entity_id: input_datetime.event_reminder_3_1
        friendly_name: First Time
        icon_template: mdi:clock-outline
        value_template: >-
          {%  set reminder_time    = states("input_datetime.event_reminder_3_1") -%}
          {%- set reminder_hour    = reminder_time.split(':')[0] -%}
          {%- set reminder_minutes = reminder_time.split(':')[1] -%}
          {{ "%0.02d:%0.02d" | format(reminder_hour|int, reminder_minutes|int) }}
  - platform: template
    sensors:
      event_reminder_3_2:
        entity_id: input_datetime.event_reminder_3_2
        friendly_name: First Time
        icon_template: mdi:clock-outline
        value_template: >-
          {%  set reminder_time    = states("input_datetime.event_reminder_3_2") -%}
          {%- set reminder_hour    = reminder_time.split(':')[0] -%}
          {%- set reminder_minutes = reminder_time.split(':')[1] -%}
          {{ "%0.02d:%0.02d" | format(reminder_hour|int, reminder_minutes|int) }}
