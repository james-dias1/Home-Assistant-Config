---
unique_id: date_fathers
name: "Father's day"
icon: mdi:human-male-boy
attributes:
  type: Holiday
state: |
  {%- macro main() -%}
    {%- set event_nthday    = 3 -%}
    {%- set event_dayofweek = "Sunday" -%}
    {%- set event_month     = 6 -%}

    {# If the event has passed for this year, get next year's event. #}
    {%- set today = states("sensor.date").split("-") -%}        
    {%- set this_month = today[1]|default(0)|int -%}
    {%- if event_month < this_month -%}
      {%- set event_year = today[0]|default(0)|int + 1 -%}
    {%- else -%}
      {%- set event_year = today[0]|default(0)|int -%}
    {%- endif -%}

    {%- set event_date = nth_dayofmonth(event_nthday, event_dayofweek, event_month, event_year) | replace("00:00:00","") -%}

    {# When we are past the event date, but are in the same month, recalcluate for the next event.  #}
    {%- if event_month == this_month -%}
      {#%- set event_day = event_date.strftime('%d')|default(0)|int -%#}
      {%- set event_day = event_date.split('-')[2]|default(0)|int -%}
      {%- set this_day = now().strftime('%d')|default(0)|int -%}

      {%- if this_day > event_day -%}
        {%- set event_date = nth_dayofmonth(event_nthday, event_dayofweek, event_month, event_year+1) if this_day > event_day -%}
      {%- endif -%}
    {%- endif -%}

    {{ event_date|replace("00:00:00","")|trim }}
  {%- endmacro -%}

  {%- macro last_dayofmonth(month, year) -%}
    {%- set daysinmonths = [31,28,31,30,31,30,31,31,30,31,30,31] -%}
    {%- set month = month|default(0)|int -%}
    {%- set year = year|default(0)|int -%}

    {# Simplified leap year calculation. See https://www.mathsisfun.com/leap-years.html #}
    {%- set isleapyear = year % 4 == 0 and (year % 100 != 0 or year % 400 == 0) -%}

    {%- set monthindex = month-1 -%}
    {%- if month == 2 and isleapyear -%}
      {{ daysinmonths[monthindex]+1 }}
    {%- else -%}
      {{ daysinmonths[monthindex] }}
    {%- endif -%}
  {%- endmacro -%}

  {#
  ex. Get the nth Monday of May.
  1st: {{ nth_dayofmonth(1, "Monday", 5) }}
  2nd: {{ nth_dayofmonth(2, "Monday", 5, 2019) }}
  Last: {{ nth_dayofmonth("last", "Monday", 5) }}

  Reference: https://www.bennadel.com/blog/1446-getting-the-nth-occurrence-of-a-day-of-the-week-for-a-given-month.htm
  #}
  {%- macro nth_dayofmonth(nth, dayofweek, month, year=now().strftime("%Y")) -%}
    {%- set dayofweek_number = {
      "Sunday":    0, "Sun": 0,
      "Monday":    1, "Mon": 1,
      "Tuesday":   2, "Tue": 2,
      "Wednesday": 3, "Wed": 3,
      "Thursday":  4, "Thu": 4,
      "Friday":    5, "Fri": 5,
      "Saturday":  6, "Sat": 6
    } %}
    {%- set dayofweek = dayofweek_number[dayofweek]|default(0)|int -%}
    {%- set firstdateofmonth = strptime(year ~"-"~ month ~"-1", "%Y-%m-%d") -%}
    {%- set firstdayofmonth = dayofweek_number[firstdateofmonth.strftime("%A")]|default(0)|int -%}

    {# Determine the first occurrence of the day. #}
    {%- if firstdayofmonth == dayofweek -%}
      {%- set firstoccurrence = 1 -%}
    {%- elif firstdayofmonth < dayofweek -%}
      {%- set firstoccurrence = (dayofweek - dayofweek_number[firstdayofmonth]|default(0)|int) -%}
    {%- else -%}
      {%- set firstoccurrence = (7 - firstdayofmonth + dayofweek) + 1 -%}
    {%- endif -%}

    {%- if nth is number -%}
      {# Determine the nth occurrence of the dayofweek. #}
      {%- set nthoccurrence = firstoccurrence + 7 * (nth-1) -%}
    {%- else -%}
      {#
      Determine the LAST occurrence of the dayofweek.

      Reference: https://cflib.org/udf/GetLastOccOfDayInMonth
      #}
      {%- set lastdayofmonth = last_dayofmonth(month, year)|default(0)|int -%}
      {%- set lastdayname = strptime(year ~"-"~ month ~"-"~ lastdayofmonth, "%Y-%m-%d").strftime("%A") -%}
      {%- set lastdaynumber = dayofweek_number[lastdayname]|default(0)|int -%}
      {%- set daydifference = lastdaynumber - dayofweek -%}

      {# Add a week if the result is negative. #}
      {%- if daydifference < 0 -%}
        {%- set daydifference = daydifference + 7 -%}
      {%- endif -%}

      {%- set nthoccurrence = lastdayofmonth - daydifference -%}
    {%- endif -%}

    {# Return the day with the month and year so it can be useful. #}
    {{ strptime(month ~"/"~ nthoccurrence ~"/"~ year, "%m/%d/%Y") }}
  {%- endmacro -%}

  {# This trick allows me to move the primary code logic to the top. #}
  {{ main() }}
