---
platform: template
sensors:
  unavailable_count:
    friendly_name: Unavailable
    icon_template: mdi:alert
    #value_template: '{{ states | selectattr("state","eq","unavailable") | map(attribute="entity_id") | list | count }}'
    value_template: |
      {% set storage = namespace(entities="") %}
      {% set entities = states | selectattr("state","eq","unavailable") | rejectattr("entity_id","eq","sensor.unavailable_count") | rejectattr("attributes.type","eq","browser_mod") | map(attribute="entity_id") | list %}
      {%- for entity in entities %}
        {%- set object_id = entity.split(".")[1] %}
        {%- if not object_id.startswith("browser_mod")
              and not object_id.startswith("glowforge") 
              and not object_id.startswith("google_") 
              and not entity.startswith("sensor.hp_")
              and not entity.startswith("media_player")
              and not object_id.startswith("unraid_") %}
          {%- set storage.entities = storage.entities ~ entity %}
          {% if not loop.last %}
            {%- set storage.entities = storage.entities ~ ',' %}
          {% endif %}
        {% endif %}
      {%- endfor %}
      {{ storage.entities.split(",") | count }}
    attribute_templates:
      entities: |
        {% set storage = namespace(entities="") %}
        {% set entities = states | selectattr("state","eq","unavailable") | rejectattr("entity_id","eq","sensor.unavailable_count") | rejectattr("attributes.type","eq","browser_mod") | map(attribute="entity_id") | list %}
        {%- for entity in entities %}
          {%- set object_id = entity.split(".")[1] %}
          {%- if not object_id.startswith("browser_mod")
                and not object_id.startswith("glowforge") 
                and not object_id.startswith("google_") 
                and not entity.startswith("sensor.hp_")
                and not entity.startswith("media_player")
                and not object_id.startswith("unraid_") %}
            {%- set storage.entities = storage.entities ~ entity %}
            {% if not loop.last %}
              {%- set storage.entities = storage.entities ~ ',' %}
            {% endif %}
          {% endif %}
        {%- endfor %}
        {{ storage.entities.split(",") }}
