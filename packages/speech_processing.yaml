######################################################################################################
###Script to actually send notifications to the ChromeCast Audios during normal hours and only when we are home! Call like this:
  # action:
    # service: script.speech_engine
    # speech_message:
# # @CCOSTAN
# Original Repo : https://github.com/CCOSTAN/Home-AssistantConfig
######################################################################################################
script:
  speech_processing:
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'polly/lastmsg'
          payload: "This message is from {{ now().strftime('%-I') }}:{{ now().strftime('%M') }} {{ now().strftime('%p') }}. {{ speech_message | truncate(254)}}"
          retain: true

      - condition: and
        conditions:
          - condition: or
            conditions:
              - condition: state
                entity_id: group.family
                state: 'home'
              - condition: state
                entity_id: input_boolean.guest_mode
                state: 'on'
          - condition: or
            conditions:
              - condition: and
                conditions:
                  #- condition: state
                  #  entity_id: group.bed
                  #  state: 'off'
                  - condition: time
                    after: '08:00:00'
                    before: '20:00:00'
              #- condition: state
              #  entity_id: input_boolean.alert_mode
              #  state: 'on'
          - condition: state
            entity_id: input_boolean.speech_notifications
            state: 'on'

      # Turn the speaker(s) on to avoid missing the beginning of the message.
      - service: media_player.turn_on
        data_template:
          entity_id: >-
            {% if media_player | length == 0 %}
              {% set media_player = [
                'media_player.living_room_speaker'
              ] %}
            {% endif %}
            {% if media_player is not string and media_player is sequence %}
              {% set media_player = media_player|join(', ') %}
            {% endif %}
            {{ media_player }}

      - service: media_player.volume_set
        data_template:
          entity_id: >
            {{ media_player }}
          volume_level: >-
            {% if now().strftime('%H')|int < 12 and now().strftime('%H')|int > 6 %}
              0.6
            {% elif now().strftime('%H')|int > 12 and now().strftime('%H')|int < 20 %}
              0.9
            {% else %}
              0.6
            {% endif %}
         
      - service: tts.amazon_polly_say
        data_template:
          entity_id: >
            {% if states.sun.sun.state == 'above_horizon' %}
              media_player.living_room_speaker, media_player.play_room_speaker
            {% else %}
              media_player.living_room_speaker
            {% endif %}
          message: >-
              {{ speech_message }}
          cache: true
      - service: input_boolean.turn_off
        data:
          entity_id:
            - input_boolean.alert_mode
            - input_boolean.lastmsg