homeassistant:
  customize:
    group.all_lights:
      hidden: false
    #light.entry:
    #  hidden: true
    light.hue:
      hidden: true
    #light.entry_light:
    #  friendly_name: "Entry"
    #light.porch_light:
    #  friendly_name: "Porch"
    switch.entry_step_light:
      friendly_name: "Step Warning"

    #input_boolean.bedroom_light_sync_enabled:
    #  persistent: true
    #input_boolean.time_based_dimmers_enabled:
    #  persistent: true

################################################
## Component Settings
################################################

## Insteon Dimmer Plugs
#######################
insteon_local:
  host: 10.0.0.30
  username: !secret insteon_user
  password: !secret insteon_pass
  timeout: 300

################################################
## Switches
################################################
input_boolean:
  bedroom_light_sync_enabled:
    name: Bedroom Light Sync
    icon: mdi:lightbulb-outline
    initial: on

  time_based_dimmers_enabled:
    name: Time Based Lights
    icon: mdi:weather-sunset
    initial: on

################################################
## Sensors
################################################
sensor:
  - platform: template
    sensors:
      lights_on:
        value_template: >
          {% macro get_lights_on() -%}
            {%- for group in states.light|groupby('state') -%}
              {%- for entity in group.list -%}
                {%- if  entity.state == 'on'
                    and entity.entity_id|lower != 'light.boys_bathroom_nightlight'
                    and entity.entity_id|lower != 'light.entry' 
                    and entity.entity_id|lower != 'light.hue'
                    and entity.entity_id|lower != 'light.porch_light'
                    and entity.entity_id|lower != 'light.porch_light_color'
                    and entity.entity_id|lower != 'light.garage_entry_light' -%}
                  {{ entity.entity_id }}{{ ' ' }}
                {%- endif -%}
              {%- endfor -%}
            {%- endfor -%}
            {%- for group in states.switch|groupby('state') -%}
              {%- for entity in group.list -%}
                {%- if  entity.state == 'on'
                    and entity.entity_id.split('_')|last == 'light' -%}
                  {{ entity.entity_id }}{{ ' ' }}
                {%- endif -%}
              {%- endfor -%}
            {%- endfor -%}
          {%- endmacro %}
          {{ get_lights_on()|trim|replace(' ', ',') }}

  - platform: template
    sensors:
      light_check:
        value_template: >
          {%- macro light_check() -%}
            {%- set lights_on_count = states.sensor.lights_on.state.split(', ')|length -%}
            {%- if lights_on_count > 0 -%}
              {%- set lights_on_friendly = states.sensor.lights_on.state|replace('light.','')|replace('switch.','')|replace('light','')|replace('_',' ')|trim|title -%}
              {%- if lights_on_count == 1 -%}
                The {{ lights_on_friendly }} light is on.
              {%- else -%}
                There are {{ lights_on_count }} lights on right now.
                The {{ lights_on_friendly }} are on.
              {%- endif -%}
            {%- endif -%}
          {%- endmacro -%}
          {{ light_check() }}


################################################
## Lights
################################################
light:
  platform: insteon_local

################################################
## Switches
################################################
switch:
  platform: insteon_local