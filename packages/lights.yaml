homeassistant:
  customize:
    group.all_lights:
      hidden: false
    light.entry_light:
      friendly_name: "Entry"
    light.porch_light:
      friendly_name: "Porch"
    switch.entry_step_light:
      friendly_name: "Step"

    #input_boolean.bedroom_light_sync_enabled:
    #  persistent: true
    #input_boolean.time_based_dimmers_enabled:
    #  persistent: true

################################################
## Component Settings
################################################

## Insteon Dimmer Plugs
#######################
insteon_local:
  host: 10.0.0.30
  username: !secret insteon_user
  password: !secret insteon_pass
  timeout: 300

################################################
## Switches
################################################
input_boolean:
  bedroom_light_sync_enabled:
    name: Bedroom Light Sync
    icon: mdi:lightbulb-outline
    initial: on

################################################
## Sensors
################################################
sensor:
  - platform: template
    sensors:
      lights_on:
        value_template: >
          {% macro get_lights_on() -%}
            {%- for group in states.light|groupby('state') -%}
              {%- for entity in group.list -%}
                {%- if  entity.state == 'on'
                    and entity.entity_id.split('_')|last != 'nightlight'
                    and entity.entity_id|lower != 'light.entry'
                    and entity.entity_id|lower != 'light.hue'
                    and entity.entity_id|lower != 'light.garage_entry_light'
                    and entity.entity_id|lower != 'light.shoe_closet_light' -%}
                  {{ entity.entity_id }}{{ ' ' }}
                {%- endif -%}
              {%- endfor -%}
            {%- endfor -%}
            {%- for group in states.switch|groupby('state') -%}
              {%- for entity in group.list -%}
                {%- if  entity.state == 'on'
                    and entity.entity_id.split('_')|last == 'light' -%}
                  {{ entity.entity_id }}{{ ' ' }}
                {%- endif -%}
              {%- endfor -%}
            {%- endfor -%}
          {%- endmacro %}
          {{ get_lights_on()|trim|replace(' ', ',') }}

  - platform: template
    sensors:
      light_check:
        value_template: >
          {%- macro friendly_list(list) -%}
            {%- set temp = list|replace('_',' ')|replace(' ,',',')|replace(',',', ')|trim|title -%}
            {%- if list.split(',')|length > 1 -%}
              {%- set temp = temp+'^' -%}
              {%- set lastitem = temp.split(',')|last -%}
              {{ temp|replace(lastitem, ' and' + lastitem)|replace('^','') }}
            {%- else -%}
              {{ temp }}
            {%- endif -%}
          {%- endmacro -%}
          {%- macro light_check() -%}
            {%- if states.sensor.lights_on.state|length != 0 -%}
              {%- set lights_on_count = states.sensor.lights_on.state.split(',')|length -%}
              {%- set lights_on_friendly = friendly_list(states.sensor.lights_on.state|replace('light.','')|replace('switch.','')|replace('light','')|replace('lamp','')) -%}
              {%- if lights_on_count == 1 -%}
                The {{ lights_on_friendly }} light is on.
              {%- else -%}
                There are {{ lights_on_count }} lights on right now.
                The {{ lights_on_friendly }} lights are on.
              {%- endif -%}
            {%- endif -%}
          {%- endmacro -%}
          {{ light_check() }}


################################################
## Lights
################################################
light:
  platform: insteon_local

################################################
## Switches
################################################
switch:
  platform: insteon_local

group:
  lights_on:
    entities:
      - sensor.lights_on
    name: "Lights On"
    #icon: mdi:home-heart
    view: no

################################################
## Automations
################################################
automation:
  #- alias: Update Lights_On Group
  #  trigger:
  #    platform: state
  #    entity_id: sensor.lights_on
  #  action:
  #    - service: group.set
  #      data_template:
  #        entity_id: group.lights_on
  #        add_entities: "{{ states.sensor.lights_on.state }}"

  - alias: Shoe Closet
    trigger:
      platform: state
      entity_id: binary_sensor.shoe_closet_door
    action:
      service_template: >
        {%- if trigger.to_state.state == "on" -%}
          light.turn_on
        {%- else -%}
          light.turn_off
        {%- endif -%}
      data:
        entity_id: light.shoe_closet_light

  - alias: Shoe Closet Timeout
    trigger:
      platform: state
      entity_id: binary_sensor.shoe_closet_door
      from: "off"
      to: "on"
      for:
        minutes: 5
    action:
      service: light.turn_off
      entity_id: light.shoe_closet_light