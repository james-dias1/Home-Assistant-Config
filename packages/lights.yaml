homeassistant:
  customize:
    group.all_lights:
      hidden: false
    light.dining_room_light:
      friendly_name: "Dining Room"

    #input_boolean.bedroom_light_sync_enabled:
    #  persistent: true
    #input_boolean.time_based_dimmers_enabled:
    #  persistent: true

################################################
## Component Settings
################################################

## Insteon Dimmer Plugs
#######################
insteon:
  host: 10.0.0.30
  username: !secret insteon_user
  password: !secret insteon_pass
  timeout: 300

################################################
## Switches
################################################
input_boolean:
  bedroom_light_sync_enabled:
    name: Bedroom Light Sync
    icon: mdi:lightbulb-outline
    initial: on
  
  shoe_closet_timeout:
    name: Shoe Closet Light Timeout
    icon: mdi:lightbulb-outline
    initial: on

################################################
## Sensors
################################################
sensor:
  - platform: template
    sensors:
      lights_on:
        value_template: >
          {% macro get_lights_on() -%}
            {%- for group in states.light|groupby('state') -%}
              {%- for entity in group.list -%}
                {%- if entity.state == 'on'
                    and entity.entity_id|lower != 'light.entry'
                    and entity.entity_id|lower != 'light.porch'
                    and entity.entity_id|lower != 'switch.boys_bathroom_nightlight'
                    and not ('garage_entry' in entity.entity_id|lower)
                    and not ('shoe_closet'  in entity.entity_id|lower)
                    and not (entity.entity_id|lower).startswith('light.hue')
                    and not (entity.entity_id|lower).endswith('nightlight') -%}
                  {{ entity.entity_id }}{{ ' ' }}
                {%- endif -%}
              {%- endfor -%}
            {%- endfor -%}
            {%- for group in states.switch|groupby('state') -%}
              {%- for entity in group.list -%}
                {%- if  entity.state == 'on'
                    and (entity.entity_id|lower).endswith('light') -%}
                  {{ entity.entity_id }}{{ ' ' }}
                {%- endif -%}
              {%- endfor -%}
            {%- endfor -%}
          {%- endmacro %}
          {{ get_lights_on()|trim|replace(' ', ',') }}

################################################
## Lights
################################################
light:
  platform: insteon

################################################
## Switches
################################################
switch:
  platform: insteon

################################################
## Automations
################################################
automation:
#  - alias: Update Lights_On Group
#    trigger:
#      platform: state
#      entity_id: sensor.lights_on
#    action:
#      - service: group.set
#        data_template:
#          entity_id: group.lights_on
#          add_entities: "{{ states('sensor.lights_on') }}"

  - alias: "Shoe Closet: Open"
    trigger:
      platform: state
      entity_id: binary_sensor.shoe_closet_door
      to: "on"
    action:
      service: light.turn_on
      entity_id: light.shoe_closet_light

  - alias: "Shoe Closet: Closed"
    trigger:
      platform: state
      entity_id: binary_sensor.shoe_closet_door
      to: "off"
    action:
      service: light.turn_off
      entity_id: light.shoe_closet_light

  - alias: Shoe Closet Timeout
    trigger:
      platform: state
      entity_id: binary_sensor.shoe_closet_door
      from: "off"
      to: "on"
      for:
        minutes: 5
    action:
      - condition: state
        entity_id: input_boolean.shoe_closet_timeout
        state: 'on'
      - service: light.turn_off
        entity_id: light.shoe_closet_light