################################################
## Logical Groups
################################################
group:
  door_sensors:
    entities:
      - binary_sensor.garage_door       # mirrors cover.garage_door
      - binary_sensor.garage_entry_door
    name: Door Sensors
    icon: mdi:door
    control: hidden
    view: no

  window_sensors:
    entities:
      - binary_sensor.glowforge_window
    name: Window Sensors
    icon: mdi:window-closed
    control: hidden
    view: no

################################################
## Sensors
################################################
sensor:
  - platform: template
    sensors:
      doors_open:
        value_template: >
          {% macro get_doors_open() -%}
            {%- for group in states.binary_sensor|groupby('state') -%}
              {%- for entity in group.list -%}
                {%- if entity.state == 'on' and 
                      entity.entity_id.split('.')[0]|lower == 'binary_sensor' and
                      entity.entity_id.split('_')|last == 'door' -%}
                  {% if not loop.first %}{{ ', ' }}{% endif %}
                  {%- if loop.last %}{{ ' and ' }}{% endif -%}
                  {{ entity.entity_id }}
                {%- endif -%}
              {%- endfor -%}
            {%- endfor -%}
          {%- endmacro %}
          {{ get_doors_open()|trim }}

  - platform: template
    sensors:
      windows_open:
        value_template: > 
          {% macro get_windows_open() -%}
            {%- for group in states.binary_sensor|groupby('state') -%}
              {%- for entity in group.list -%}
                {%- if entity.state == 'on' and 
                      entity.entity_id.split('.')[0]|lower == 'binary_sensor' and
                      entity.entity_id.split('_')|last == 'window' -%}
                  {% if not loop.first %}{{ ', ' }}{% endif %}
                  {%- if loop.last %}{{ ' and ' }}{% endif -%}
                  {{ entity.entity_id }}
                {%- endif -%}
              {%- endfor -%}
            {%- endfor -%}
          {%- endmacro %}
          {{ get_windows_open()|trim }}

#automation:
  ##############################################
  ##  Door or Window Open Announcements
  ##############################################
  #- alias: Announce Open Doors and Windows
  #  trigger:
  #    - platform: state
  #      entity_id:
  #        - binary_sensor.glowforge_window
  #        - binary_sensor.garage_entry_door
  #      from: 'off'
  #  action:
  #    - service: script.notify_ios_engine
  #      data_template:
  #        who: 'parents'
  #        message: "The {{ trigger.to_state.attributes.friendly_name }} has been {{ (trigger.to_state.state)|replace('_', ' ') }}."
  #    - service: input_boolean.turn_on
  #      entity_id: input_boolean.alert_mode
  #    - service: script.speech_engine
  #      data_template:
  #        call_window_check: 1
  #        call_inside_weather: 1

  ############################################
  ## Warn us if the garage door is still open
  ############################################
  #- alias: Doors and Windows Watchdog
  #  trigger:
  #    platform: time
  #    hours: 20
  #    minutes: 0
  #    seconds: 0
  #  condition:
  #    condition: or
  #    conditions:
  #      - condition: state
  #        entity_id: binary_sensor.garage_entry_door
  #        state: 'on'
  #      - condition: state
  #        entity_id: binary_sensor.glowforge_window
  #        state: 'on'
  #  action:
  #    - service: input_boolean.turn_on
  #      entity_id: input_boolean.alert_mode
  #    - service: script.speech_engine
  #      data_template:
  #        call_window_check: 1